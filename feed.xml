<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://alshedivat.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://alshedivat.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-09-19T17:53:38+00:00</updated><id>https://alshedivat.github.io/feed.xml</id><title type="html">blank</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">CKA exam cheatsheet</title><link href="https://alshedivat.github.io/blog/2024/cka-exam-explained/" rel="alternate" type="text/html" title="CKA exam cheatsheet"/><published>2024-09-19T00:01:00+00:00</published><updated>2024-09-19T00:01:00+00:00</updated><id>https://alshedivat.github.io/blog/2024/cka-exam-explained</id><content type="html" xml:base="https://alshedivat.github.io/blog/2024/cka-exam-explained/"><![CDATA[<p>Certificated Kubernetes Admin (CKA) is a widely recognized certificate for K8S admins. The exam is carried out in simulators. There are 17 categories of questions:</p> <ol> <li>RBAC</li> <li>Pod Monitor</li> <li>NetworkPolicy</li> <li>Service Exposure</li> <li>Ingress Creation</li> <li>Node Troubleshooting</li> <li>Pod Scheduling</li> <li>Node Top</li> <li>Multi-Container Pod</li> <li>PV Creation</li> <li>PVC Creation</li> <li>Pod Logging</li> <li>Sidecar Logging</li> <li>Deployment Scale-Up</li> <li>Etcd Backup</li> <li>Cluster Upgrade</li> <li>Node Maintenance</li> </ol>]]></content><author><name></name></author><category term="IT"/><category term="windows"/><summary type="html"><![CDATA[Certificated Kubernetes Admin (CKA) is a widely recognized certificate for K8S admins. The exam is carried out in simulators. There are 17 categories of questions:]]></summary></entry><entry><title type="html">Solution to The physical disk’s sector size is not supported by the storage pool (0x80E70004)</title><link href="https://alshedivat.github.io/blog/2024/windows-storage-space/" rel="alternate" type="text/html" title="Solution to The physical disk’s sector size is not supported by the storage pool (0x80E70004)"/><published>2024-09-19T00:01:00+00:00</published><updated>2024-09-19T00:01:00+00:00</updated><id>https://alshedivat.github.io/blog/2024/windows-storage-space</id><content type="html" xml:base="https://alshedivat.github.io/blog/2024/windows-storage-space/"><![CDATA[<p>Sometimes, people get error when adding disks to storage space:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>The physical disk's sector size is not supported by the storage pool.
(0x80E70004)
</code></pre></div></div> <p>This is usually happens when the disk had a 512B partition before it was inserted and detected by Windows. Windows will cache the result and treat the disk’s sector size as 512B. The solution is simple:</p> <ol> <li>Delete all partitions on the disk.</li> <li>Reboot.</li> <li>Re-add the disk to storage pool, it should work now.</li> </ol>]]></content><author><name></name></author><category term="IT"/><category term="windows"/><summary type="html"><![CDATA[Erase and Reboot is all you need.]]></summary></entry><entry><title type="html">Kubernetes Ingress annotations for Harbor</title><link href="https://alshedivat.github.io/blog/2024/k8s-ingress-annotations/" rel="alternate" type="text/html" title="Kubernetes Ingress annotations for Harbor"/><published>2024-09-19T00:01:00+00:00</published><updated>2024-09-19T00:01:00+00:00</updated><id>https://alshedivat.github.io/blog/2024/k8s-ingress-annotations</id><content type="html" xml:base="https://alshedivat.github.io/blog/2024/k8s-ingress-annotations/"><![CDATA[<p>When pushing large images to <a href="https://goharbor.io/">harbor</a> image registry, client may run into push operation timeout due to incorrect <code class="language-plaintext highlighter-rouge">proxy-*-timeout</code> configuration, or 403 forbidden due to insufficient <code class="language-plaintext highlighter-rouge">proxy-body-size</code> configuration. The solution is to patch ingress resource of harbor. Here is an example:</p> <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">metadata</span><span class="pi">:</span>
  <span class="na">annotations</span><span class="pi">:</span>
    <span class="na">nginx.ingress.kubernetes.io/proxy-body-size</span><span class="pi">:</span> <span class="s2">"</span><span class="s">0"</span> <span class="c1"># Allow large uploads, other legal values are 20000m</span>
    <span class="na">nginx.ingress.kubernetes.io/proxy-connect-timeout</span><span class="pi">:</span> <span class="s2">"</span><span class="s">60000"</span> <span class="c1"># allow long-time connection</span>
    <span class="na">nginx.ingress.kubernetes.io/proxy-read-timeout</span><span class="pi">:</span> <span class="s2">"</span><span class="s">60000"</span> <span class="c1"># allow long-time connection</span>
    <span class="na">nginx.ingress.kubernetes.io/proxy-send-timeout</span><span class="pi">:</span> <span class="s2">"</span><span class="s">60000"</span> <span class="c1"># allow long-time connection</span>
    <span class="na">nginx.ingress.kubernetes.io/proxy_buffering</span><span class="pi">:</span> <span class="s2">"</span><span class="s">off"</span> <span class="c1"># Optional</span>
    <span class="na">nginx.ingress.kubernetes.io/proxy_ignore_headers</span><span class="pi">:</span> <span class="s">X-Accel-Buffering</span> <span class="c1"># Optional</span>
    <span class="na">nginx.ingress.kubernetes.io/ssl-redirect</span><span class="pi">:</span> <span class="s2">"</span><span class="s">true"</span> <span class="c1"># Optional</span>
</code></pre></div></div> <p>These annotations also applies to other applications (e.g. Nextcloud and MinIO) with large uploads/downloads.</p>]]></content><author><name></name></author><category term="IT"/><category term="kubernetes"/><category term="ingress"/><summary type="html"><![CDATA[solution for push timeout with large images]]></summary></entry><entry><title type="html">Deploying an experimental MinIO single-node cluster with DirectPV</title><link href="https://alshedivat.github.io/blog/2024/minio-kubernetes/" rel="alternate" type="text/html" title="Deploying an experimental MinIO single-node cluster with DirectPV"/><published>2024-09-19T00:01:00+00:00</published><updated>2024-09-19T00:01:00+00:00</updated><id>https://alshedivat.github.io/blog/2024/minio-kubernetes</id><content type="html" xml:base="https://alshedivat.github.io/blog/2024/minio-kubernetes/"><![CDATA[<p><a href="https://github.com/minio/minio">MinIO</a> is an open-source high performance object storage solution. It is designed to be distributed and can be deployed on Kubernetes clusters with ease. MinIO requires some sort of persistent storage to store its objects. However, with its built-in erasure coding and hashmap, deploying MinIO on redundant volumes is a surplus, and could result in performance drops and disk overhead. To simplify its storage model, MinIO project has proposed <a href="https://github.com/minio/directpv">DirectPV</a>, a CSI driver for Direct Attached Storage. In practice, it is recommended to provision storage for MinIO using DirectPV.</p> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="https://github.com/minio/directpv/blob/master/docs/images/architecture?raw=true-480.webp 480w,https://github.com/minio/directpv/blob/master/docs/images/architecture?raw=true-800.webp 800w,https://github.com/minio/directpv/blob/master/docs/images/architecture?raw=true-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="https://github.com/minio/directpv/blob/master/docs/images/architecture.png?raw=true" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <p>Here is a simple guide on deploying a single-node MinIO instance with DirectPV on Kubernetes. <strong>TBD</strong></p>]]></content><author><name></name></author><category term="IT"/><category term="kubernetes"/><category term="minio"/><summary type="html"><![CDATA[for experiment purpose, only]]></summary></entry></feed>